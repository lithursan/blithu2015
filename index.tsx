
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
// Register service worker generated by vite-plugin-pwa
// The virtual module 'virtual:pwa-register' is provided at build time by the plugin.
let updateSW: ((reloadPage?: boolean) => Promise<void>) | undefined;
try {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  const { registerSW } = await import('virtual:pwa-register');
  updateSW = registerSW({
    onNeedRefresh() {
      // You could show a toast here to the user and call updateSW() when they confirm
      console.log('New content available, click to update.');
    },
    onOfflineReady() {
      console.log('App ready to work offline.');
    }
  });
} catch (e) {
  // ignore in dev when plugin isn't installed/active
}

const rootElement = document.getElementById('root');
if (!rootElement) {
  throw new Error("Could not find root element to mount to");
}

const root = ReactDOM.createRoot(rootElement);
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
